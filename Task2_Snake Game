import pygame
import time
import random

# Window dimensions
window_width = 800
window_height = 600

# Snake dimensions
snake_size = 20

# Colors
black = pygame.Color(0, 0, 0)
white = pygame.Color(255, 255, 255)
red = pygame.Color(255, 0, 0)
green = pygame.Color(0, 255, 0)

pygame.init()

# Create the game window
window = pygame.display.set_mode((window_width, window_height))
pygame.display.set_caption('Snake Game')

clock = pygame.time.Clock()

font_style = pygame.font.SysFont(None, 50)


def message(msg, color):
    rendered_msg = font_style.render(msg, True, color)
    window.blit(rendered_msg, [window_width / 6, window_height / 3])


def game_loop():
    game_over = False
    game_close = False

    # Initial snake position
    x1 = window_width / 2
    y1 = window_height / 2

    # Initial snake movement
    x1_change = 0
    y1_change = 0

    # Create the initial snake
    snake = []
    snake_length = 1

    # Generate initial food position
    food_x = round(random.randrange(0, window_width - snake_size) / 20.0) * 20.0
    food_y = round(random.randrange(0, window_height - snake_size) / 20.0) * 20.0

    while not game_over:

        while game_close:
            window.fill(black)
            message("You lost! Press Q-Quit or C-Play Again", red)
            pygame.display.update()

            for event in pygame.event.get():
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_q:
                        game_over = True
                        game_close = False
                    if event.key == pygame.K_c:
                        game_loop()

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                game_over = True
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    x1_change = -snake_size
                    y1_change = 0
                elif event.key == pygame.K_RIGHT:
                    x1_change = snake_size
                    y1_change = 0
                elif event.key == pygame.K_UP:
                    y1_change = -snake_size
                    x1_change = 0
                elif event.key == pygame.K_DOWN:
                    y1_change = snake_size
                    x1_change = 0

        # Check if the snake hits the boundary
        if x1 >= window_width or x1 < 0 or y1 >= window_height or y1 < 0:
            game_close = True

        # Update snake position
        x1 += x1_change
        y1 += y1_change

        window.fill(black)
        pygame.draw.rect(window, green, [food_x, food_y, snake_size, snake_size])
        snake_head = []
        snake_head.append(x1)
        snake_head.append(y1)
        snake.append(snake_head)

        # Remove the tail if the snake becomes longer than snake_length
        if len(snake) > snake_length:
            del snake[0]

        # Check if the snake hits itself
        for segment in snake[:-1]:
            if segment == snake_head:
                game_close = True

        # Draw the snake
        for segment in snake:
            pygame.draw.rect(window, white, [segment[0], segment[1], snake_size, snake_size])

        pygame.display.update()

        # Check if the snake eats the food
        if x1 == food_x and y1 == food_y:
            food_x = round(random.randrange(0, window_width - snake_size) / 20.0) * 20.0
            food_y = round(random.randrange(0, window_height - snake_size) / 20.0) * 20.0
            snake_length += 1

        clock.tick(15)

    pygame.quit()


game_loop()
